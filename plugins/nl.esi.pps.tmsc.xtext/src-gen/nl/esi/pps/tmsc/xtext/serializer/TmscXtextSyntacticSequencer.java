/*
 * Generated by Xtext, all rights reserved ESI (TNO)
 */
package nl.esi.pps.tmsc.xtext.serializer;

import com.google.inject.Inject;
import java.util.List;
import nl.esi.pps.tmsc.xtext.services.TmscXtextGrammarAccess;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class TmscXtextSyntacticSequencer extends AbstractSyntacticSequencer {

	protected TmscXtextGrammarAccess grammarAccess;
	protected AbstractElementAlias match_TmscXtextModel___RightCurlyBracketKeyword_1_0_4_TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2__a;
	protected AbstractElementAlias match_TmscXtextModel___TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2_RightCurlyBracketKeyword_1_0_4__a;
	protected AbstractElementAlias match_XComponent___LeftCurlyBracketKeyword_5_0_RightCurlyBracketKeyword_5_2__q;
	protected AbstractElementAlias match_XEvent___LeftCurlyBracketKeyword_8_0_RightCurlyBracketKeyword_8_2__q;
	protected AbstractElementAlias match_XExecutor___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_2__q;
	protected AbstractElementAlias match_XFunction___LeftCurlyBracketKeyword_6_0_RightCurlyBracketKeyword_6_2__q;
	protected AbstractElementAlias match_XInterface___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q;
	protected AbstractElementAlias match_XOperation___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (TmscXtextGrammarAccess) access;
		match_TmscXtextModel___RightCurlyBracketKeyword_1_0_4_TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getRightCurlyBracketKeyword_1_0_4()), new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getTmscKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getSettingsKeyword_1_0_1()), new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getLeftCurlyBracketKeyword_1_0_2()));
		match_TmscXtextModel___TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2_RightCurlyBracketKeyword_1_0_4__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getTmscKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getSettingsKeyword_1_0_1()), new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getLeftCurlyBracketKeyword_1_0_2()), new TokenAlias(false, false, grammarAccess.getTmscXtextModelAccess().getRightCurlyBracketKeyword_1_0_4()));
		match_XComponent___LeftCurlyBracketKeyword_5_0_RightCurlyBracketKeyword_5_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getXComponentAccess().getLeftCurlyBracketKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getXComponentAccess().getRightCurlyBracketKeyword_5_2()));
		match_XEvent___LeftCurlyBracketKeyword_8_0_RightCurlyBracketKeyword_8_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getXEventAccess().getLeftCurlyBracketKeyword_8_0()), new TokenAlias(false, false, grammarAccess.getXEventAccess().getRightCurlyBracketKeyword_8_2()));
		match_XExecutor___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getXExecutorAccess().getLeftCurlyBracketKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getXExecutorAccess().getRightCurlyBracketKeyword_4_2()));
		match_XFunction___LeftCurlyBracketKeyword_6_0_RightCurlyBracketKeyword_6_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getXFunctionAccess().getLeftCurlyBracketKeyword_6_0()), new TokenAlias(false, false, grammarAccess.getXFunctionAccess().getRightCurlyBracketKeyword_6_2()));
		match_XInterface___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getXInterfaceAccess().getLeftCurlyBracketKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getXInterfaceAccess().getRightCurlyBracketKeyword_3_2()));
		match_XOperation___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getXOperationAccess().getLeftCurlyBracketKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getXOperationAccess().getRightCurlyBracketKeyword_3_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_TmscXtextModel___RightCurlyBracketKeyword_1_0_4_TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2__a.equals(syntax))
				emit_TmscXtextModel___RightCurlyBracketKeyword_1_0_4_TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TmscXtextModel___TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2_RightCurlyBracketKeyword_1_0_4__a.equals(syntax))
				emit_TmscXtextModel___TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2_RightCurlyBracketKeyword_1_0_4__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_XComponent___LeftCurlyBracketKeyword_5_0_RightCurlyBracketKeyword_5_2__q.equals(syntax))
				emit_XComponent___LeftCurlyBracketKeyword_5_0_RightCurlyBracketKeyword_5_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_XEvent___LeftCurlyBracketKeyword_8_0_RightCurlyBracketKeyword_8_2__q.equals(syntax))
				emit_XEvent___LeftCurlyBracketKeyword_8_0_RightCurlyBracketKeyword_8_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_XExecutor___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_2__q.equals(syntax))
				emit_XExecutor___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_XFunction___LeftCurlyBracketKeyword_6_0_RightCurlyBracketKeyword_6_2__q.equals(syntax))
				emit_XFunction___LeftCurlyBracketKeyword_6_0_RightCurlyBracketKeyword_6_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_XInterface___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q.equals(syntax))
				emit_XInterface___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_XOperation___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q.equals(syntax))
				emit_XOperation___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('}' 'tmsc' 'settings' '{')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'tmsc' 'settings' '{' (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     (rule start) 'tmsc' 'settings' '{' (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     (rule start) 'tmsc' 'settings' '{' (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     (rule start) 'tmsc' 'settings' '{' (ambiguity) properties+=XProperty
	 *     architectureKind=XArchitectureKind (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     architectureKind=XArchitectureKind (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     architectureKind=XArchitectureKind (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     architectureKind=XArchitectureKind (ambiguity) properties+=XProperty
	 *     components+=XComponent 'tmsc' 'settings' '{' (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     components+=XComponent 'tmsc' 'settings' '{' (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     components+=XComponent 'tmsc' 'settings' '{' (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     components+=XComponent 'tmsc' 'settings' '{' (ambiguity) properties+=XProperty
	 *     dependencySettings+=XDependencySettings 'tmsc' 'settings' '{' (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     dependencySettings+=XDependencySettings 'tmsc' 'settings' '{' (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     dependencySettings+=XDependencySettings 'tmsc' 'settings' '{' (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     dependencySettings+=XDependencySettings 'tmsc' 'settings' '{' (ambiguity) properties+=XProperty
	 *     events+=XEvent 'tmsc' 'settings' '{' (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     events+=XEvent 'tmsc' 'settings' '{' (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     events+=XEvent 'tmsc' 'settings' '{' (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     events+=XEvent 'tmsc' 'settings' '{' (ambiguity) properties+=XProperty
	 *     executors+=XExecutor 'tmsc' 'settings' '{' (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     executors+=XExecutor 'tmsc' 'settings' '{' (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     executors+=XExecutor 'tmsc' 'settings' '{' (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     executors+=XExecutor 'tmsc' 'settings' '{' (ambiguity) properties+=XProperty
	 *     functions+=XFunction 'tmsc' 'settings' '{' (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     functions+=XFunction 'tmsc' 'settings' '{' (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     functions+=XFunction 'tmsc' 'settings' '{' (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     functions+=XFunction 'tmsc' 'settings' '{' (ambiguity) properties+=XProperty
	 *     interfaces+=XInterface 'tmsc' 'settings' '{' (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     interfaces+=XInterface 'tmsc' 'settings' '{' (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     interfaces+=XInterface 'tmsc' 'settings' '{' (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     interfaces+=XInterface 'tmsc' 'settings' '{' (ambiguity) properties+=XProperty
	 *     properties+=XProperty (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     properties+=XProperty (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     properties+=XProperty (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     properties+=XProperty (ambiguity) properties+=XProperty
	 *     scheduled=EBOOLEAN_OBJECT (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     scheduled=EBOOLEAN_OBJECT (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     scheduled=EBOOLEAN_OBJECT (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     scheduled=EBOOLEAN_OBJECT (ambiguity) properties+=XProperty
	 *     timeBound=ABS_EBIGDECIMAL (ambiguity) 'architecture' ':' architectureKind=XArchitectureKind
	 *     timeBound=ABS_EBIGDECIMAL (ambiguity) 'scheduled' ':' scheduled=EBOOLEAN_OBJECT
	 *     timeBound=ABS_EBIGDECIMAL (ambiguity) 'time-bound' ':' timeBound=ABS_EBIGDECIMAL
	 *     timeBound=ABS_EBIGDECIMAL (ambiguity) properties+=XProperty
	 */
	protected void emit_TmscXtextModel___RightCurlyBracketKeyword_1_0_4_TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('tmsc' 'settings' '{' '}')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 *     (rule start) (ambiguity) components+=XComponent
	 *     (rule start) (ambiguity) dependencySettings+=XDependencySettings
	 *     (rule start) (ambiguity) events+=XEvent
	 *     (rule start) (ambiguity) executors+=XExecutor
	 *     (rule start) (ambiguity) functions+=XFunction
	 *     (rule start) (ambiguity) interfaces+=XInterface
	 *     architectureKind=XArchitectureKind '}' (ambiguity) (rule end)
	 *     architectureKind=XArchitectureKind '}' (ambiguity) components+=XComponent
	 *     architectureKind=XArchitectureKind '}' (ambiguity) dependencySettings+=XDependencySettings
	 *     architectureKind=XArchitectureKind '}' (ambiguity) events+=XEvent
	 *     architectureKind=XArchitectureKind '}' (ambiguity) executors+=XExecutor
	 *     architectureKind=XArchitectureKind '}' (ambiguity) functions+=XFunction
	 *     architectureKind=XArchitectureKind '}' (ambiguity) interfaces+=XInterface
	 *     components+=XComponent (ambiguity) (rule end)
	 *     components+=XComponent (ambiguity) components+=XComponent
	 *     components+=XComponent (ambiguity) dependencySettings+=XDependencySettings
	 *     components+=XComponent (ambiguity) events+=XEvent
	 *     components+=XComponent (ambiguity) executors+=XExecutor
	 *     components+=XComponent (ambiguity) functions+=XFunction
	 *     components+=XComponent (ambiguity) interfaces+=XInterface
	 *     dependencySettings+=XDependencySettings (ambiguity) (rule end)
	 *     dependencySettings+=XDependencySettings (ambiguity) components+=XComponent
	 *     dependencySettings+=XDependencySettings (ambiguity) dependencySettings+=XDependencySettings
	 *     dependencySettings+=XDependencySettings (ambiguity) events+=XEvent
	 *     dependencySettings+=XDependencySettings (ambiguity) executors+=XExecutor
	 *     dependencySettings+=XDependencySettings (ambiguity) functions+=XFunction
	 *     dependencySettings+=XDependencySettings (ambiguity) interfaces+=XInterface
	 *     events+=XEvent (ambiguity) (rule end)
	 *     events+=XEvent (ambiguity) components+=XComponent
	 *     events+=XEvent (ambiguity) dependencySettings+=XDependencySettings
	 *     events+=XEvent (ambiguity) events+=XEvent
	 *     events+=XEvent (ambiguity) executors+=XExecutor
	 *     events+=XEvent (ambiguity) functions+=XFunction
	 *     events+=XEvent (ambiguity) interfaces+=XInterface
	 *     executors+=XExecutor (ambiguity) (rule end)
	 *     executors+=XExecutor (ambiguity) components+=XComponent
	 *     executors+=XExecutor (ambiguity) dependencySettings+=XDependencySettings
	 *     executors+=XExecutor (ambiguity) events+=XEvent
	 *     executors+=XExecutor (ambiguity) executors+=XExecutor
	 *     executors+=XExecutor (ambiguity) functions+=XFunction
	 *     executors+=XExecutor (ambiguity) interfaces+=XInterface
	 *     functions+=XFunction (ambiguity) (rule end)
	 *     functions+=XFunction (ambiguity) components+=XComponent
	 *     functions+=XFunction (ambiguity) dependencySettings+=XDependencySettings
	 *     functions+=XFunction (ambiguity) events+=XEvent
	 *     functions+=XFunction (ambiguity) executors+=XExecutor
	 *     functions+=XFunction (ambiguity) functions+=XFunction
	 *     functions+=XFunction (ambiguity) interfaces+=XInterface
	 *     interfaces+=XInterface (ambiguity) (rule end)
	 *     interfaces+=XInterface (ambiguity) components+=XComponent
	 *     interfaces+=XInterface (ambiguity) dependencySettings+=XDependencySettings
	 *     interfaces+=XInterface (ambiguity) events+=XEvent
	 *     interfaces+=XInterface (ambiguity) executors+=XExecutor
	 *     interfaces+=XInterface (ambiguity) functions+=XFunction
	 *     interfaces+=XInterface (ambiguity) interfaces+=XInterface
	 *     properties+=XProperty '}' (ambiguity) (rule end)
	 *     properties+=XProperty '}' (ambiguity) components+=XComponent
	 *     properties+=XProperty '}' (ambiguity) dependencySettings+=XDependencySettings
	 *     properties+=XProperty '}' (ambiguity) events+=XEvent
	 *     properties+=XProperty '}' (ambiguity) executors+=XExecutor
	 *     properties+=XProperty '}' (ambiguity) functions+=XFunction
	 *     properties+=XProperty '}' (ambiguity) interfaces+=XInterface
	 *     scheduled=EBOOLEAN_OBJECT '}' (ambiguity) (rule end)
	 *     scheduled=EBOOLEAN_OBJECT '}' (ambiguity) components+=XComponent
	 *     scheduled=EBOOLEAN_OBJECT '}' (ambiguity) dependencySettings+=XDependencySettings
	 *     scheduled=EBOOLEAN_OBJECT '}' (ambiguity) events+=XEvent
	 *     scheduled=EBOOLEAN_OBJECT '}' (ambiguity) executors+=XExecutor
	 *     scheduled=EBOOLEAN_OBJECT '}' (ambiguity) functions+=XFunction
	 *     scheduled=EBOOLEAN_OBJECT '}' (ambiguity) interfaces+=XInterface
	 *     timeBound=ABS_EBIGDECIMAL '}' (ambiguity) (rule end)
	 *     timeBound=ABS_EBIGDECIMAL '}' (ambiguity) components+=XComponent
	 *     timeBound=ABS_EBIGDECIMAL '}' (ambiguity) dependencySettings+=XDependencySettings
	 *     timeBound=ABS_EBIGDECIMAL '}' (ambiguity) events+=XEvent
	 *     timeBound=ABS_EBIGDECIMAL '}' (ambiguity) executors+=XExecutor
	 *     timeBound=ABS_EBIGDECIMAL '}' (ambiguity) functions+=XFunction
	 *     timeBound=ABS_EBIGDECIMAL '}' (ambiguity) interfaces+=XInterface
	 */
	protected void emit_TmscXtextModel___TmscKeyword_1_0_0_SettingsKeyword_1_0_1_LeftCurlyBracketKeyword_1_0_2_RightCurlyBracketKeyword_1_0_4__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 *     provides+=[XInterface|ID] (ambiguity) (rule end)
	 *     requires+=[XInterface|ID] (ambiguity) (rule end)
	 */
	protected void emit_XComponent___LeftCurlyBracketKeyword_5_0_RightCurlyBracketKeyword_5_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     arguments+=XEventArgument ')' (ambiguity) (rule end)
	 *     function=[XFunction|IDString] (ambiguity) (rule end)
	 *     incomingDependencies+=[XDependency|IDString] (ambiguity) (rule end)
	 *     outgoingDependencies+=XDependency (ambiguity) (rule end)
	 */
	protected void emit_XEvent___LeftCurlyBracketKeyword_8_0_RightCurlyBracketKeyword_8_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 */
	protected void emit_XExecutor___LeftCurlyBracketKeyword_4_0_RightCurlyBracketKeyword_4_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 *     operation=[XOperation|FQN] (ambiguity) (rule end)
	 *     parameters+=XFunctionParameter ')' (ambiguity) (rule end)
	 */
	protected void emit_XFunction___LeftCurlyBracketKeyword_6_0_RightCurlyBracketKeyword_6_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 */
	protected void emit_XInterface___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 */
	protected void emit_XOperation___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
