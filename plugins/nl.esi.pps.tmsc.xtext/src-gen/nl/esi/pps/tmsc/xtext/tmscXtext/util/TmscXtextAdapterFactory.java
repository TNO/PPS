/**
 * Generated by Xtext, all rights reserved ESI (TNO)
 */
package nl.esi.pps.tmsc.xtext.tmscXtext.util;

import nl.esi.pps.tmsc.xtext.tmscXtext.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see nl.esi.pps.tmsc.xtext.tmscXtext.TmscXtextPackage
 * @generated
 */
public class TmscXtextAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static TmscXtextPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TmscXtextAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = TmscXtextPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TmscXtextSwitch<Adapter> modelSwitch =
    new TmscXtextSwitch<Adapter>()
    {
      @Override
      public Adapter caseTmscXtextModel(TmscXtextModel object)
      {
        return createTmscXtextModelAdapter();
      }
      @Override
      public Adapter caseXNamedArchitectureElement(XNamedArchitectureElement object)
      {
        return createXNamedArchitectureElementAdapter();
      }
      @Override
      public Adapter caseXInterface(XInterface object)
      {
        return createXInterfaceAdapter();
      }
      @Override
      public Adapter caseXOperation(XOperation object)
      {
        return createXOperationAdapter();
      }
      @Override
      public Adapter caseXComponent(XComponent object)
      {
        return createXComponentAdapter();
      }
      @Override
      public Adapter caseXFunction(XFunction object)
      {
        return createXFunctionAdapter();
      }
      @Override
      public Adapter caseXFunctionParameter(XFunctionParameter object)
      {
        return createXFunctionParameterAdapter();
      }
      @Override
      public Adapter caseXExecutor(XExecutor object)
      {
        return createXExecutorAdapter();
      }
      @Override
      public Adapter caseXEvent(XEvent object)
      {
        return createXEventAdapter();
      }
      @Override
      public Adapter caseXEventArgument(XEventArgument object)
      {
        return createXEventArgumentAdapter();
      }
      @Override
      public Adapter caseXDependency(XDependency object)
      {
        return createXDependencyAdapter();
      }
      @Override
      public Adapter caseXDependencyTypeObject(XDependencyTypeObject object)
      {
        return createXDependencyTypeObjectAdapter();
      }
      @Override
      public Adapter caseXDependencySettings(XDependencySettings object)
      {
        return createXDependencySettingsAdapter();
      }
      @Override
      public Adapter caseXProperty(XProperty object)
      {
        return createXPropertyAdapter();
      }
      @Override
      public Adapter caseXPropertyValue(XPropertyValue object)
      {
        return createXPropertyValueAdapter();
      }
      @Override
      public Adapter caseXPropertyStringValue(XPropertyStringValue object)
      {
        return createXPropertyStringValueAdapter();
      }
      @Override
      public Adapter caseXPropertyNumberValue(XPropertyNumberValue object)
      {
        return createXPropertyNumberValueAdapter();
      }
      @Override
      public Adapter caseXPropertyBooleanValue(XPropertyBooleanValue object)
      {
        return createXPropertyBooleanValueAdapter();
      }
      @Override
      public Adapter caseXPropertyMutliValue(XPropertyMutliValue object)
      {
        return createXPropertyMutliValueAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.TmscXtextModel <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.TmscXtextModel
   * @generated
   */
  public Adapter createTmscXtextModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XNamedArchitectureElement <em>XNamed Architecture Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XNamedArchitectureElement
   * @generated
   */
  public Adapter createXNamedArchitectureElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XInterface <em>XInterface</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XInterface
   * @generated
   */
  public Adapter createXInterfaceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XOperation <em>XOperation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XOperation
   * @generated
   */
  public Adapter createXOperationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XComponent <em>XComponent</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XComponent
   * @generated
   */
  public Adapter createXComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XFunction <em>XFunction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XFunction
   * @generated
   */
  public Adapter createXFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XFunctionParameter <em>XFunction Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XFunctionParameter
   * @generated
   */
  public Adapter createXFunctionParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XExecutor <em>XExecutor</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XExecutor
   * @generated
   */
  public Adapter createXExecutorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XEvent <em>XEvent</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XEvent
   * @generated
   */
  public Adapter createXEventAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XEventArgument <em>XEvent Argument</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XEventArgument
   * @generated
   */
  public Adapter createXEventArgumentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XDependency <em>XDependency</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XDependency
   * @generated
   */
  public Adapter createXDependencyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XDependencyTypeObject <em>XDependency Type Object</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XDependencyTypeObject
   * @generated
   */
  public Adapter createXDependencyTypeObjectAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XDependencySettings <em>XDependency Settings</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XDependencySettings
   * @generated
   */
  public Adapter createXDependencySettingsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XProperty <em>XProperty</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XProperty
   * @generated
   */
  public Adapter createXPropertyAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyValue <em>XProperty Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyValue
   * @generated
   */
  public Adapter createXPropertyValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyStringValue <em>XProperty String Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyStringValue
   * @generated
   */
  public Adapter createXPropertyStringValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyNumberValue <em>XProperty Number Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyNumberValue
   * @generated
   */
  public Adapter createXPropertyNumberValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyBooleanValue <em>XProperty Boolean Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyBooleanValue
   * @generated
   */
  public Adapter createXPropertyBooleanValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyMutliValue <em>XProperty Mutli Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see nl.esi.pps.tmsc.xtext.tmscXtext.XPropertyMutliValue
   * @generated
   */
  public Adapter createXPropertyMutliValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //TmscXtextAdapterFactory
