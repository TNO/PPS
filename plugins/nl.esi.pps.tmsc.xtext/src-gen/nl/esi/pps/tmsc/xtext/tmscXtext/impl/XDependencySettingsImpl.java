/**
 * Generated by Xtext, all rights reserved ESI (TNO)
 */
package nl.esi.pps.tmsc.xtext.tmscXtext.impl;

import java.math.BigDecimal;

import java.util.Collection;

import nl.esi.pps.tmsc.xtext.tmscXtext.TmscXtextPackage;
import nl.esi.pps.tmsc.xtext.tmscXtext.XDependencySettings;
import nl.esi.pps.tmsc.xtext.tmscXtext.XDependencyType;
import nl.esi.pps.tmsc.xtext.tmscXtext.XProperty;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>XDependency Settings</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.esi.pps.tmsc.xtext.tmscXtext.impl.XDependencySettingsImpl#getType <em>Type</em>}</li>
 *   <li>{@link nl.esi.pps.tmsc.xtext.tmscXtext.impl.XDependencySettingsImpl#getTimeBound <em>Time Bound</em>}</li>
 *   <li>{@link nl.esi.pps.tmsc.xtext.tmscXtext.impl.XDependencySettingsImpl#getScheduled <em>Scheduled</em>}</li>
 *   <li>{@link nl.esi.pps.tmsc.xtext.tmscXtext.impl.XDependencySettingsImpl#getPrefix <em>Prefix</em>}</li>
 *   <li>{@link nl.esi.pps.tmsc.xtext.tmscXtext.impl.XDependencySettingsImpl#getProperties <em>Properties</em>}</li>
 * </ul>
 *
 * @generated
 */
public class XDependencySettingsImpl extends MinimalEObjectImpl.Container implements XDependencySettings
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final XDependencyType TYPE_EDEFAULT = XDependencyType.MESSAGE;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected XDependencyType type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getTimeBound() <em>Time Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeBound()
   * @generated
   * @ordered
   */
  protected static final BigDecimal TIME_BOUND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTimeBound() <em>Time Bound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeBound()
   * @generated
   * @ordered
   */
  protected BigDecimal timeBound = TIME_BOUND_EDEFAULT;

  /**
   * The default value of the '{@link #getScheduled() <em>Scheduled</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheduled()
   * @generated
   * @ordered
   */
  protected static final Boolean SCHEDULED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getScheduled() <em>Scheduled</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScheduled()
   * @generated
   * @ordered
   */
  protected Boolean scheduled = SCHEDULED_EDEFAULT;

  /**
   * The default value of the '{@link #getPrefix() <em>Prefix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrefix()
   * @generated
   * @ordered
   */
  protected static final String PREFIX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrefix() <em>Prefix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrefix()
   * @generated
   * @ordered
   */
  protected String prefix = PREFIX_EDEFAULT;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<XProperty> properties;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected XDependencySettingsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TmscXtextPackage.Literals.XDEPENDENCY_SETTINGS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XDependencyType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(XDependencyType newType)
  {
    XDependencyType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TmscXtextPackage.XDEPENDENCY_SETTINGS__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigDecimal getTimeBound()
  {
    return timeBound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTimeBound(BigDecimal newTimeBound)
  {
    BigDecimal oldTimeBound = timeBound;
    timeBound = newTimeBound;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TmscXtextPackage.XDEPENDENCY_SETTINGS__TIME_BOUND, oldTimeBound, timeBound));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Boolean getScheduled()
  {
    return scheduled;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScheduled(Boolean newScheduled)
  {
    Boolean oldScheduled = scheduled;
    scheduled = newScheduled;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TmscXtextPackage.XDEPENDENCY_SETTINGS__SCHEDULED, oldScheduled, scheduled));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPrefix()
  {
    return prefix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrefix(String newPrefix)
  {
    String oldPrefix = prefix;
    prefix = newPrefix;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TmscXtextPackage.XDEPENDENCY_SETTINGS__PREFIX, oldPrefix, prefix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<XProperty> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<XProperty>(XProperty.class, this, TmscXtextPackage.XDEPENDENCY_SETTINGS__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TYPE:
        return getType();
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TIME_BOUND:
        return getTimeBound();
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__SCHEDULED:
        return getScheduled();
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PREFIX:
        return getPrefix();
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PROPERTIES:
        return getProperties();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TYPE:
        setType((XDependencyType)newValue);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TIME_BOUND:
        setTimeBound((BigDecimal)newValue);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__SCHEDULED:
        setScheduled((Boolean)newValue);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PREFIX:
        setPrefix((String)newValue);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends XProperty>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TIME_BOUND:
        setTimeBound(TIME_BOUND_EDEFAULT);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__SCHEDULED:
        setScheduled(SCHEDULED_EDEFAULT);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PREFIX:
        setPrefix(PREFIX_EDEFAULT);
        return;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PROPERTIES:
        getProperties().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TYPE:
        return type != TYPE_EDEFAULT;
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__TIME_BOUND:
        return TIME_BOUND_EDEFAULT == null ? timeBound != null : !TIME_BOUND_EDEFAULT.equals(timeBound);
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__SCHEDULED:
        return SCHEDULED_EDEFAULT == null ? scheduled != null : !SCHEDULED_EDEFAULT.equals(scheduled);
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PREFIX:
        return PREFIX_EDEFAULT == null ? prefix != null : !PREFIX_EDEFAULT.equals(prefix);
      case TmscXtextPackage.XDEPENDENCY_SETTINGS__PROPERTIES:
        return properties != null && !properties.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", timeBound: ");
    result.append(timeBound);
    result.append(", scheduled: ");
    result.append(scheduled);
    result.append(", prefix: ");
    result.append(prefix);
    result.append(')');
    return result.toString();
  }

} //XDependencySettingsImpl
